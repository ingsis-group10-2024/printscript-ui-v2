name: "CD - UI - DEV ãƒ„"

on:
  push:
    branches:
      - group-10-dev

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build the UI
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.ACTOR }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/ingsis-group10-2024/printscript-ui-dev:latest
          build-args: |
              GITHUB_ACTOR=${{ github.repository_owner }}
              GITHUB_TOKEN=${{ secrets.TOKEN }}

  deploy:
      name: UI deployment
      runs-on: ubuntu-latest
      needs: build-and-publish

      steps:
        - name: Update and Restart UI Infrastructure
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.DEV_URL }}
            username: "mcchicken"
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
              cd snippet-infra 
              sudo su
              docker container stop printscript-ui
              docker container rm printscript-ui 
              docker-compose -f docker-compose.yml pull printscript-ui  
              docker-compose -f docker-compose.yml up -d printscript-ui
              docker image prune -f